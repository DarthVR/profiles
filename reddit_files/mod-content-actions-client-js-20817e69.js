SML.di("./shell-e48e5956.js",import.meta.url,"shelle48e5956");SML.di("./icon-c33661e6.js",import.meta.url,"iconc33661e6");SML.di("./expandable-section-header-41e0cfd1.js",import.meta.url,"expandablesectionheader41e0cfd1");SML.di("./age-gate-standalone-client-js-b13e879d.js",import.meta.url,"agegatestandaloneclientjsb13e879d");SML.di("./moderation-461324fc.js",import.meta.url,"moderation461324fc");SML.di("./mod-bulk-actions-b972488b.js",import.meta.url,"modbulkactionsb972488b");SML.di("./comment-5b02ad76.js",import.meta.url,"comment5b02ad76");SML.di("./distinguished-tags-1c4757ea.js",import.meta.url,"distinguishedtags1c4757ea");SML.di("./overflow-menu-actions-f8d12b95.js",import.meta.url,"overflowmenuactionsf8d12b95");SML.di("./table-pagination-77cf692d.js",import.meta.url,"tablepagination77cf692d");SML.di("./faceplate-shimmer-9894306d.js",import.meta.url,"faceplateshimmer9894306d");SML.di("./select-controller-4c63b3e8.js",import.meta.url,"selectcontroller4c63b3e8");SML.di("./click-card-b6150aa2.js",import.meta.url,"clickcardb6150aa2");SML.di("./previous-actions-client-js-3044bbd0.js",import.meta.url,"previousactionsclientjs3044bbd0");SML.di("./awards-2379b181.js",import.meta.url,"awards2379b181");SML.di("./user-flair-fe275854.js",import.meta.url,"userflairfe275854");SML.di("./faceplate-hovercard-98735488.js",import.meta.url,"faceplatehovercard98735488");SML.di("./faceplate-tooltip-f30979fb.js",import.meta.url,"faceplatetooltipf30979fb");
SML.dm("modcontentactionsclientjs20817e69",["shelle48e5956","iconc33661e6","expandablesectionheader41e0cfd1","agegatestandaloneclientjsb13e879d","moderation461324fc","modbulkactionsb972488b","comment5b02ad76","distinguishedtags1c4757ea","overflowmenuactionsf8d12b95","tablepagination77cf692d","faceplateshimmer9894306d","selectcontroller4c63b3e8","clickcardb6150aa2","previousactionsclientjs3044bbd0","awards2379b181","userflairfe275854","faceplatehovercard98735488","faceplatetooltipf30979fb"],(async(e,t,s,i,a,o,n,r,d)=>{const c=new class{constructor(){this.gqlSubscriptionControllers=[],this.onNewDataReceived=t=>{e.p(e.T.ModRealtimeUpdate,t)},this.onNewDataReceivedThrottled=i.M(this.onNewDataReceived,1e3,!0)}subscribeToRealtimeUpdates(t){if(t.subredditId){const a=new e.bx(t);t.addController(a),a.subscribe((s=t.subredditId,i=this.onNewDataReceivedThrottled,{query:{operationName:"SubscribeSubscription",query:"\n    subscription SubscribeSubscription($input: SubscribeInput!) {\n      subscribe(input: $input) {\n        id\n        ... on BasicMessage {\n          data {\n            ... on ModActionMessageData {\n              id\n              createdAt\n              subredditID\n              moderatorID\n              targetID\n              targetType\n              action\n            }\n          }\n        }\n      }\n    }\n    ",variables:{input:{channel:{teamOwner:"MOD",subredditID:s,category:"MOD_UPDATE"}}}},onData:e=>{const t=e?.data?.subscribe?.data;t&&i(t)}})),this.gqlSubscriptionControllers.push(a)}var s,i}hostDisconnected(){this.unsubscribeFromRealtimeUpdates()}unsubscribeFromRealtimeUpdates(){this.gqlSubscriptionControllers.forEach((e=>e.unsubscribe())),this.gqlSubscriptionControllers=[]}},l=e=>e.stopPropagation(),p=t.x` <div class="pl-sm"> <faceplate-shimmer class="h-[40px] w-100 pt-md" shape="pill"></faceplate-shimmer> <faceplate-shimmer class="h-[40px] w-100 pt-md" shape="pill"></faceplate-shimmer> <faceplate-shimmer class="h-[40px] w-100 pt-md" shape="pill"></faceplate-shimmer> <faceplate-shimmer class="h-[40px] w-100 pt-md" shape="pill"></faceplate-shimmer> </div> `;class h extends t.s{constructor(){super(),this.previousActionsFeature=!1,this.thingId="",this.scrollContainerSelector="",this.showPreviousActions=!1,this.pubsub=new e.P(this),this.repositionClickCard=()=>{this.clickCard?.reposition()},this.togglePreviousActions=()=>{const e=this.shadowRoot?.querySelector("div[slot='content']");e?.hasAttribute("hidden")?this.clickCard?.show():this.clickCard?.close()},this.wrapWithPreviousActions=i=>{if(!this.previousActionsFeature)return i;const o=a.i(this.thingId);return t.x` <click-card label="previous-actions-popup" scroll-container-selector="${t.l(this.scrollContainerSelector)}" custom-global-close-event="close-all-previous-actions-popups" @click-card:opened="${()=>{this.showPreviousActions=!0}}" @click-card:closed="${()=>{this.showPreviousActions=!1}}" tooltip-style="z-index: 20;"> <div class="w-fit m-0 border-0 bg-transparent cursor-pointer relative">${i}</div> <div slot="content" class="w-[350px] pb-sm pr-sm"> <div class="flex items-center justify-between pl-sm min-h-[40px]"> <p class="text-14 font-semibold m-0"> Previous Actions </p> ${o!==e.a9.Award?t.x`<faceplate-dropdown-menu @click="${l}"> ${e.r({appearance:"plain",leadingIcon:t.ai()})} <faceplate-menu slot="menu" hidden> <ul class="p-0 max-w-[300px]" role="menu"> ${s.l({label:"Ignore reports and approve",description:t.x`<span class="font-normal">Remove this item from the mod queue, and ignore future reports </span>`,attributes:{onclick:()=>{this.dropdownMenu?.close(),this.dispatchEvent(e.c(r.M.IgnoreReports))}}})} </ul> </faceplate-menu> </faceplate-dropdown-menu>`:t.A} </div> <hr class="bg-neutral-border border-0 h-[1px] mb-0 ml-sm"> <div class="w-100 max-h-[300px] overflow-y-auto mr-sm" style="scrollbar-color:var(--color-neutral-border) transparent;scrollbar-width:thin"></div> ${this.showPreviousActions?t.x` <div class="w-100 max-h-[300px] overflow-y-auto mr-sm" style="scrollbar-color:var(--color-neutral-border) transparent;scrollbar-width:thin"> ${o===e.a9.Award?t.x`<p class="pl-sm"> Looks like this award doesn't have any previous actions to display... </p>`:t.x` <faceplate-partial src="/svc/shreddit/previous-actions/${this.thingId}" loading="eager"> ${p} </faceplate-partial> `} </div> `:t.A} </div> </click-card> `},this.setAttribute("id","previous-actions-popup")}connectedCallback(){this.addEventListener("faceplate-load",this.repositionClickCard),this.addEventListener("faceplate-load-start",this.repositionClickCard),super.connectedCallback()}disconnectedCallback(){this.removeEventListener("faceplate-load",this.repositionClickCard),this.removeEventListener("faceplate-load-start",this.repositionClickCard),super.disconnectedCallback()}updated(){this.repositionClickCard()}}h.styles=[e.t],e._([e.n({type:Boolean,attribute:"previous-actions-feature"})],h.prototype,"previousActionsFeature",void 0),e._([e.n({type:String,attribute:"thing-id"})],h.prototype,"thingId",void 0),e._([e.n({type:String,attribute:"scroll-container-selector"})],h.prototype,"scrollContainerSelector",void 0),e._([e.d()],h.prototype,"showPreviousActions",void 0),e._([e.y("click-card")],h.prototype,"clickCard",void 0),e._([e.y("faceplate-dropdown-menu")],h.prototype,"dropdownMenu",void 0);let m=class extends h{constructor(){super(...arguments),this.shouldRenderVerdict=!1,this.shouldRenderInlineActions=!1,this.shouldRenderShareToModChat=!1,this.shouldRenderOverflowMenu=!1,this.showVerdict=!1,this.verdictLoading=!1,this.hasSubscribedToRealtimeUpdates=!1,this.markVerdictAsLoaded=e=>{e.detail.resource.startsWith("/svc/shreddit/mod-partials/")&&(this.verdictLoading=!1)},this.handlePostUpdated=({postId:e,action:t,value:s})=>{if(this.thingId===e)switch(t){case d.a.addRemovalReason:case d.a.approve:case d.a.confirmRemoval:case d.a.remove:case d.a.removeAsSpam:this.loadVerdict();break;case d.a.ignoreReports:s&&this.loadVerdict()}},this.handleCommentUpdated=({commentId:e,action:t,value:s})=>{if(this.thingId===e)switch(t){case n.C.addRemovalReason:case n.C.approve:case n.C.confirmRemoval:case n.C.remove:case n.C.removeAsSpam:this.loadVerdict();break;case n.C.ignoreReports:s&&this.loadVerdict()}},this.handleAwardOnContentUpdate=({action:t,awardOnContentId:s})=>{if(this.thingId===s)switch(t){case o.A.approve:this.loadVerdict(e.am.ModApproved);break;case o.A.remove:case o.A.confirmRemoval:this.loadVerdict(e.am.ModRemoved)}},this.loadVerdict=async e=>{this.showVerdict=!0,this.verdictLoading=!0,this.verdictOverride=e},this.onModInlineActionsLoaded=e=>{if(!e||!e.target)return;const t=e.target,s=t?.assignedNodes();s?.length>0&&!this.hasSubscribedToRealtimeUpdates&&(c.subscribeToRealtimeUpdates(this),this.hasSubscribedToRealtimeUpdates=!0)}}connectedCallback(){this.addEventListener("faceplate-load",this.markVerdictAsLoaded),super.connectedCallback()}firstUpdated(){switch(a.i(this.thingId)){case e.a9.Award:this.pubsub.subscribe(e.T.AwardOnContentUpdated,this.handleAwardOnContentUpdate);break;case e.a9.Comment:this.pubsub.subscribe(e.T.CommentUpdated,this.handleCommentUpdated);break;case e.a9.Post:this.pubsub.subscribe(e.T.PostUpdated,this.handlePostUpdated)}}disconnectedCallback(){switch(this.removeEventListener("faceplate-load",this.markVerdictAsLoaded),a.i(this.thingId)){case e.a9.Award:this.pubsub.unsubscribe(e.T.AwardOnContentUpdated,this.handleAwardOnContentUpdate);break;case e.a9.Comment:this.pubsub.unsubscribe(e.T.CommentUpdated,this.handleCommentUpdated);break;case e.a9.Post:this.pubsub.unsubscribe(e.T.PostUpdated,this.handlePostUpdated)}super.disconnectedCallback()}render(){const e=this.shouldRenderInlineActions?t.x` <slot name="mod-inline-actions" @slotchange="${this.onModInlineActionsLoaded}"></slot> `:t.A,s=this.verdictLoading?t.x` <faceplate-partial src="/svc/shreddit/mod-partials/${a.i(this.thingId)?.toLowerCase()}/${this.thingId}${this.verdictOverride?`?verdict=${this.verdictOverride}`:""}" loading="eager" target="#feed-element-mod-verdict-${this.thingId.replace("|","\\|")}"> <slot name="mod-verdict"></slot> </faceplate-partial> `:this.showVerdict||this.moderationVerdict?t.x`<slot name="mod-verdict"></slot>`:"";return t.x` ${this.shouldRenderVerdict?t.x` <div class="flex gap-x-2xs items-center max-h-xl"> ${s?this.wrapWithPreviousActions(s):e} </div> `:e} ${this.shouldRenderShareToModChat?t.x`<slot name="mod-share-to-mod-chat"></slot>`:t.A} ${this.shouldRenderOverflowMenu?t.x`<slot name="mod-overflow-menu"></slot>`:t.A} `}};m.styles=[e.t],e._([e.n({type:Boolean,attribute:"render-verdict"})],m.prototype,"shouldRenderVerdict",void 0),e._([e.n({type:Boolean,attribute:"render-inline-actions"})],m.prototype,"shouldRenderInlineActions",void 0),e._([e.n({type:Boolean,attribute:"render-share-to-mod-chat"})],m.prototype,"shouldRenderShareToModChat",void 0),e._([e.n({type:Boolean,attribute:"render-overflow-menu"})],m.prototype,"shouldRenderOverflowMenu",void 0),e._([e.n({type:String,attribute:"moderation-verdict"})],m.prototype,"moderationVerdict",void 0),e._([e.d()],m.prototype,"showVerdict",void 0),e._([e.d()],m.prototype,"verdictLoading",void 0),e._([e.d()],m.prototype,"verdictOverride",void 0),m=e._([e.e("mod-content-actions")],m);let u=class extends h{constructor(){super(...arguments),this.showExpandable=!1,this.shouldRender=!0,this.filtersCount=0,this.reportsCount=0,this.areInlineReportsExpanded=!1,this.handleSlotChange=e=>{const t=e.target.assignedNodes()[0];if(t){const e=t;this.filtersCount=Number(e.getAttribute("filters-count")),this.reportsCount=Number(e.getAttribute("reports-count"))}},this.handleExpandStateChanged=e=>{this.areInlineReportsExpanded=e},this.onToggleReportsChange=e=>{const{action:t}=e;switch(t){case"expand":this.handleExpandStateChanged(!0);break;case"collapse":this.handleExpandStateChanged(!1)}},this.onPostUpdateAction=e=>{if(e.postId!==this.thingId)return;const{action:t,value:s}=e;switch(t){case d.a.approve:case d.a.approveOptimistic:case d.a.remove:case d.a.removeAsSpam:case d.a.confirmRemoval:case d.a.addRemovalReason:case d.a.removeOptimistic:case d.a.removeAsSpamOptimistic:case d.a.confirmRemovalOptimistic:this.shouldRender=!1;break;case d.a.ignoreReports:s&&(this.shouldRender=!1)}},this.onCommentUpdateAction=e=>{if(e.commentId!==this.thingId)return;const{action:t,value:s}=e;switch(t){case n.C.approve:case n.C.approveOptimistic:case n.C.remove:case n.C.removeAsSpam:case n.C.confirmRemoval:case n.C.addRemovalReason:case n.C.removeOptimistic:case n.C.removeAsSpamOptimistic:case n.C.confirmRemovalOptimistic:this.shouldRender=!1;break;case n.C.ignoreReports:s&&(this.shouldRender=!1)}},this.onAwardOnContentUpdateAction=({action:e,awardOnContentId:t})=>{if(t===this.thingId)switch(e){case o.A.approve:case o.A.remove:case o.A.confirmRemoval:this.shouldRender=!1}}}connectedCallback(){switch(this.pubsub.subscribe(e.T.ModReportsToggle,this.onToggleReportsChange),a.i(this.thingId)){case e.a9.Award:this.pubsub.subscribe(e.T.AwardOnContentUpdated,this.onAwardOnContentUpdateAction);break;case e.a9.Comment:this.pubsub.subscribe(e.T.CommentUpdated,this.onCommentUpdateAction);break;case e.a9.Post:this.pubsub.subscribe(e.T.PostUpdated,this.onPostUpdateAction)}super.connectedCallback()}disconnectedCallback(){this.pubsub.unsubscribe(e.T.ModReportsToggle,this.onToggleReportsChange),super.disconnectedCallback()}render(){if(this.shouldRender)return this.showExpandable&&0===this.filtersCount&&this.reportsCount>1?t.x` <div class="inline-flex flex-row w-fit gap-2 bg-mods-reported-background rounded-[8px] items-start overflow-hidden"> ${this.wrapWithPreviousActions(this.areInlineReportsExpanded?t.x`<slot name="mod-content-state-indicators" class="pb-xs"></slot>`:t.x`<slot name="mod-content-state-indicators-only-first" class="pb-xs"></slot>`)} <div style="margin:4px 8px 0 0"> ${e.r({appearance:"secondary",children:this.areInlineReportsExpanded?"":"+"+(this.reportsCount-1),leadingIcon:this.areInlineReportsExpanded?t.j({size:t.I.ExtraSmall}):"",trailingIcon:this.areInlineReportsExpanded?"":t.Y({size:t.I.ExtraSmall}),attributes:{className:"bg-tone-7 h-[16px] text-10 font-semibold rounded-[8px] z-2 relative",onclick:()=>{this.handleExpandStateChanged(!this.areInlineReportsExpanded)},style:"--button-padding: 4px",id:"toggle-button"},size:e.s.ExtraSmall})} </div> </div> `:this.wrapWithPreviousActions(t.x` <slot name="mod-content-state-indicators" class="pb-xs" @slotchange="${this.handleSlotChange}"></slot> `)}};u.styles=[e.t],e._([e.n({type:Boolean,attribute:"show-expandable"})],u.prototype,"showExpandable",void 0),e._([e.d()],u.prototype,"shouldRender",void 0),e._([e.d()],u.prototype,"filtersCount",void 0),e._([e.d()],u.prototype,"reportsCount",void 0),e._([e.d()],u.prototype,"areInlineReportsExpanded",void 0),u=e._([e.e("mod-content-state-indicators")],u);const b=new Set([e.gL.ApproveComment,e.gL.ApproveLink,e.gL.RemoveComment,e.gL.RemoveLink,e.gL.SpamComment,e.gL.SpamLink,e.gL.AddRemovalReason,e.gL.UpdateRemovalReason]);let v=class extends t.s{constructor(){super(),this.updateAnimation="",this.thingId="",this.userId="",this.updateState=void 0,this._isVisible=!1,this._pubsub=new e.P(this),this.handleIncomingRealtimeUpdate=e=>{const{moderatorID:t,targetID:s,action:i}=e;s===this.thingId&&t!==this.userId&&b.has(i)&&(this.updateState=e,this.triggerRealtimeUpdateAnimation())},this.onItemEnterIntoView=()=>{this._isVisible=!0,this.triggerRealtimeUpdateAnimation()},this.onItemLeaveView=()=>{this._isVisible=!1},this.triggerRealtimeUpdateAnimation=()=>{if(!this._isVisible||!this.updateState)return;this.updateAnimation=e.i()?"dark":"light";const t=r.d(this.updateState.action);a.p(this.thingId,t,!0,!0),this.updateState=void 0},new e.ar(this,this,{threshold:[.5]})}connectedCallback(){this._pubsub.subscribe(e.T.ModRealtimeUpdate,this.handleIncomingRealtimeUpdate),this.addEventListener("faceplate-enter",this.onItemEnterIntoView),this.addEventListener("faceplate-leave",this.onItemLeaveView),super.connectedCallback()}disconnectedCallback(){this._pubsub.unsubscribe(e.T.ModRealtimeUpdate,this.handleIncomingRealtimeUpdate),this.removeEventListener("faceplate-enter",this.onItemEnterIntoView),this.removeEventListener("faceplate-leave",this.onItemLeaveView),super.disconnectedCallback()}render(){return t.x`<slot></slot>`}};v.styles=[t.a`:host{width:100%}`,e.z("mod-realtime-action-listener[updateAnimation~='light'] > * {\n  animation: realtimeFade 3s;\n  animation-timing-function: ease-out;\n}\nmod-realtime-action-listener[updateAnimation~='dark'] > * {\n  animation: realtimeFadeNight 3s;\n  animation-timing-function: ease-out;\n}\n@keyframes realtimeFade {\n  from {\n    background-color: #fff2bd;\n    border: 1px solid #dbaf00;\n  }\n  to {\n    background-color: #f0f5f9;\n    border: 1px solid transparent;\n  }\n}\n@keyframes realtimeFadeNight {\n  from {\n    background-color: #665505;\n    border: 1px solid #382d03;\n  }\n  to {\n    background-color: #030303;\n    border: 1px solid #343536;\n  }\n}\n"),e.t],e._([e.n({type:String,reflect:!0})],v.prototype,"updateAnimation",void 0),e._([e.n({type:String,attribute:"thing-id"})],v.prototype,"thingId",void 0),e._([e.n({type:String,attribute:"user-id"})],v.prototype,"userId",void 0),v=e._([e.e("mod-realtime-action-listener")],v)}));