SML.di("./shell-e48e5956.js",import.meta.url,"shelle48e5956");SML.di("./age-gate-standalone-client-js-b13e879d.js",import.meta.url,"agegatestandaloneclientjsb13e879d");SML.di("./icon-c33661e6.js",import.meta.url,"iconc33661e6");
SML.dm("achievementseventsclientjsba55962a",["shelle48e5956","agegatestandaloneclientjsb13e879d","iconc33661e6"],(async(e,t,i)=>{let a=class extends i.s{constructor(){super(...arguments),this.userId=null,this.isProgressToastFeatureActivated=!1,this.pubsub=new e.P(this),this.achievementNotificationSubscriptionController=new e.bx(this),this.onAchievementNotificationRecieved=async i=>{if(i&&"achievements"===i.gameID)try{const i=await e.B({operation:e.O.AchievementUnlockedNotifications,variables:{maxImageWidth:32}}),a=[],s=i.data.identity?.redditor.trophyCase?.notifications;s?.forEach((e=>{if(a.push(e.id),"StreakExtendedNotification"===e.__typename)this.activateProgressToast({open:!0,notificationType:t.ae.STREAK_EXTENDED,streakLength:e.length});else if("TrophyProgressedNotification"===e.__typename){const i=e.trophy;"AchievementImageTrophy"===i.__typename&&this.activateProgressToast({open:!0,notificationType:t.ae.TROPHY_PROGRESSED,numberCompleted:i.progress?.done,total:i.progress?.total,progressUnit:i.progress?.unit,imgSrc:i.lockedImage.url,achievementId:i.id})}else if("TrophyUnlockedNotification"===e.__typename){const i=e.trophy;"AchievementImageTrophy"!==i.__typename&&"AchievementRepeatableImageTrophy"!==i.__typename||this.activateProgressToast({open:!0,notificationType:t.ae.TROPHY_UNLOCKED,message:i.name,imgSrc:i.lockedImage.url,unlockedImgSrc:i.gridImage.url,achievementId:i.id})}})),a&&a.length>0&&this.deleteAchievementNotifications(a)}catch(e){window.Sentry?.captureError?.(e)}},this._activateFeature=async t=>e.k(t)}async activateProgressToast(t){if(!this.getIsAchievementsUpdatesEnabled())return;const i=!!document.querySelector("achievement-progress-toast");if(!this.isProgressToastFeatureActivated&&!i)try{this.isProgressToastFeatureActivated=!0,await this._activateFeature({name:e.b_})}catch(e){this.isProgressToastFeatureActivated=!1}this.pubsub.publish(e.T.AchievementsProgressToast,t)}getIsAchievementsUpdatesEnabled(){try{if(!e.l.isAvailable())return!0;const t=e.l.getItem(`${e.L.AchievementsUpdatesEnabled}-${this.userId}`);return null===t||JSON.parse(t)}catch(e){window.Sentry?.captureError?.(e)}return!0}async connectedCallback(){super.connectedCallback(),this.getIsAchievementsUpdatesEnabled()&&this.subscribeToAchievementNotifications(),e.l.isAvailable()&&e.l.getItem(e.L.AchievementsStore)===`${this.userId}-${e.b$.Enrolled}`||this.enrollUserIntoAchievements()}async deleteAchievementNotifications(t){try{await e.B({operation:e.O.DeleteAchievementNotifications,variables:{ids:t}})}catch(e){window.Sentry?.captureError?.(e)}}async enrollUserIntoAchievements(){try{const t=await e.B({operation:e.O.EnrollInStreaks,variables:{input:{timezone:Intl.DateTimeFormat().resolvedOptions().timeZone,gameId:"achievements"}}}),i=t.data?.enrollInGamification?.ok;if(!i)return;e.l.isAvailable()&&e.l.setItem(e.L.AchievementsStore,`${this.userId}-${t.data?.enrollInGamification?.status||""}`)}catch(e){window.Sentry?.captureError?.(e)}}subscribeToAchievementNotifications(){try{this.achievementNotificationSubscriptionController.subscribe({query:{operationName:"SubscribeSubscription",query:"\n            subscription SubscribeSubscription($input: SubscribeInput!) {\n              subscribe(input: $input) {\n                ... on BasicMessage {\n                  data {\n                    ... on GamificationAccomplishmentsMessageData {\n                      gameID\n                    }\n                  }\n                }\n              }\n            }\n            ",variables:{input:{channel:{teamOwner:"I18N",category:"GAMIFICATION",userID:this.userId}}}},onData:async e=>{this.onAchievementNotificationRecieved(e?.data?.subscribe.data)}})}catch(e){window.Sentry?.captureError?.(e)}}render(){return i.x``}};a.styles=[e.t],e._([e.n({type:String,attribute:"user-id"})],a.prototype,"userId",void 0),a=e._([e.e("achievement-events")],a)}));